"""create table

Revision ID: d9aded90b19c
Revises: 
Create Date: 2021-09-16 17:43:52.910989

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'd9aded90b19c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('t_TWAP',
    sa.Column('twap_id', sa.String(length=50), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('exchange', sa.String(length=36), nullable=True),
    sa.Column('symbol', sa.String(length=50), nullable=True),
    sa.Column('is_enabled', mysql.BIT(length=1), nullable=True),
    sa.Column('json_info', sa.String(length=1600), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('twap_id')
    )
    op.create_table('t_account',
    sa.Column('account_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('account_name', sa.String(length=100), nullable=True),
    sa.Column('exchange', sa.String(length=36), nullable=True),
    sa.Column('api_key', sa.String(length=255), nullable=True),
    sa.Column('secret_key', sa.String(length=255), nullable=True),
    sa.Column('symbol_ids', sa.String(length=512), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('t_balance_count',
    sa.Column('balance_id', sa.INTEGER(), nullable=False),
    sa.Column('insert_date', sa.DateTime(), nullable=True),
    sa.Column('account_id', sa.INTEGER(), nullable=True),
    sa.Column('account_name', sa.String(length=50), nullable=True),
    sa.Column('json_info', sa.String(length=1600), nullable=True),
    sa.PrimaryKeyConstraint('balance_id')
    )
    op.create_table('t_brush_order',
    sa.Column('bucketing_id', sa.String(length=50), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('exchange', sa.String(length=36), nullable=True),
    sa.Column('symbol', sa.String(length=50), nullable=True),
    sa.Column('is_enabled', mysql.BIT(length=1), nullable=True),
    sa.Column('json_info', sa.String(length=1600), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('bucketing_id')
    )
    op.create_table('t_damping_order',
    sa.Column('damping_order_id', sa.String(length=50), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('exchange', sa.String(length=36), nullable=True),
    sa.Column('symbol', sa.String(length=50), nullable=True),
    sa.Column('is_enabled', mysql.BIT(length=1), nullable=True),
    sa.Column('json_info', sa.String(length=1600), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('damping_order_id')
    )
    op.create_table('t_deposit_withdraw',
    sa.Column('tran_id', sa.String(length=20), nullable=False),
    sa.Column('insert_date', sa.DateTime(), nullable=True),
    sa.Column('account_id', sa.INTEGER(), nullable=True),
    sa.Column('transfer_type', sa.INTEGER(), nullable=True),
    sa.Column('json_info', sa.String(length=1600), nullable=True),
    sa.PrimaryKeyConstraint('tran_id')
    )
    op.create_table('t_exchange',
    sa.Column('ex_id', sa.INTEGER(), nullable=False),
    sa.Column('exchange_name', sa.String(length=50), nullable=True),
    sa.Column('exchange_id', sa.INTEGER(), nullable=True),
    sa.Column('exchange_level', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('ex_id')
    )
    op.create_table('t_order_book',
    sa.Column('draping_id', sa.String(length=50), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('exchange', sa.String(length=36), nullable=True),
    sa.Column('symbol', sa.String(length=50), nullable=True),
    sa.Column('is_enabled', mysql.BIT(length=1), nullable=True),
    sa.Column('json_info', sa.String(length=1600), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('draping_id')
    )
    op.create_table('t_permission',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ps_name', sa.String(length=20), nullable=True),
    sa.Column('ps_pid', sa.INTEGER(), nullable=True),
    sa.Column('ps_c', sa.String(length=32), nullable=True),
    sa.Column('ps_a', sa.String(length=32), nullable=True),
    sa.Column('ps_level', sa.String(length=6), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('t_role',
    sa.Column('role_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(length=20), nullable=True),
    sa.Column('ps_ids', sa.String(length=512), nullable=True),
    sa.Column('ps_ca', sa.Text(), nullable=True),
    sa.Column('role_desc', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('t_trades_record',
    sa.Column('trades_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.INTEGER(), nullable=True),
    sa.Column('account_name', sa.String(length=50), nullable=True),
    sa.Column('insert_date', sa.DateTime(), nullable=True),
    sa.Column('order_id', sa.String(length=20), nullable=True),
    sa.Column('symbol', sa.String(length=50), nullable=True),
    sa.Column('is_buyer', sa.INTEGER(), nullable=True),
    sa.Column('json_info', sa.String(length=1600), nullable=True),
    sa.PrimaryKeyConstraint('trades_id')
    )
    op.create_table('t_user',
    sa.Column('user_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=50), nullable=True),
    sa.Column('salt', sa.String(length=36), nullable=True),
    sa.Column('role_id', sa.INTEGER(), nullable=True),
    sa.Column('state', sa.INTEGER(), nullable=True),
    sa.Column('mobile', sa.String(length=32), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('account_ids', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('t_permission_api',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ps_id', sa.INTEGER(), nullable=True),
    sa.Column('ps_api_service', sa.String(length=255), nullable=True),
    sa.Column('ps_api_action', sa.String(length=255), nullable=True),
    sa.Column('ps_api_path', sa.String(length=255), nullable=True),
    sa.Column('ps_api_order', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['ps_id'], ['t_permission.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('t_permission_api')
    op.drop_table('t_user')
    op.drop_table('t_trades_record')
    op.drop_table('t_role')
    op.drop_table('t_permission')
    op.drop_table('t_order_book')
    op.drop_table('t_exchange')
    op.drop_table('t_deposit_withdraw')
    op.drop_table('t_damping_order')
    op.drop_table('t_brush_order')
    op.drop_table('t_balance_count')
    op.drop_table('t_account')
    op.drop_table('t_TWAP')
    # ### end Alembic commands ###
